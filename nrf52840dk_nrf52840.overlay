/ {
	aliases {
		qdec0 = &qdec0;
		qenca = &phase_a;
		qencb = &phase_b;
	};

	encoder-emulate {
		compatible = "gpio-leds";
		phase_a: phase_a {
			/* Arduino A0 */
			gpios = <&gpio0 3 GPIO_ACTIVE_HIGH>;
		};
		phase_b: phase_b {
			/* Arduino A1 */
			gpios = <&gpio0 4 GPIO_ACTIVE_HIGH>;
		};
	};

};

&pinctrl {
	qdec_pinctrl: qdec_pinctrl {
		group1 {
			psels = <NRF_PSEL(QDEC_A, 0, 31)>,   /* Ardiuno A5 */
				<NRF_PSEL(QDEC_B, 0, 30)>;   /* Arduino A4 */
		};
	};
};

&qdec0 {
	status = "okay";
	pinctrl-0 = <&qdec_pinctrl>;
	pinctrl-names = "default";
	steps = < 120 >;
	led-pre = < 500 >;
};

&spi1 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&spi1_default>;
    pinctrl-1 = <&spi1_sleep>;
    pinctrl-names = "default","sleep";
    // cs-gpios = <&gpio0 30 GPIO_ACTIVE_LOW>;
    paw3395: paw3395@0{
        compatible = "bosch,bme280";
        reg = <0>;
        spi-max-frequency = <3000000>;
    };
};
/* STEP 2.2 - Change the pin configuration */ 

&pinctrl {
    spi1_default: spi1_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 27)>,					 
                    <NRF_PSEL(SPIM_MOSI, 0, 26)>,
                    <NRF_PSEL(SPIM_MISO, 0, 31)>;
        };
    };
    spi1_sleep: spi1_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 27)>,
                    <NRF_PSEL(SPIM_MOSI, 0, 26)>,
                    <NRF_PSEL(SPIM_MISO, 0, 31)>;
            low-power-enable;
        };
    };
};
/{
    leds {
		compatible = "gpio-leds";
		ncs: ncs {
			gpios = <&gpio0 30 GPIO_ACTIVE_HIGH>;
			label = "Green LED 4";
		};
        nreset: nreset {
			gpios = <&gpio0 29 GPIO_ACTIVE_LOW>;
			label = "Green LED 5";
		};
    };

    /* These aliases are provided for compatibility with samples */
    aliases {
        ncs = &ncs;
        nreset = &nreset;
    };
};